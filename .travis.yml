language: generic

before_install_linux: &linux_setup
  - mkdir mason && curl -sSfL https://github.com/mapbox/mason/archive/v0.2.0.tar.gz | tar --gunzip --extract --strip-components=1 --directory=./mason
  - ./mason/mason install gdb 7.12
  - sudo ln -s $(./mason/mason prefix gdb 7.12)/bin/gdb /usr/local/bin/gdb
  - which gdb
  # To ensure that the --setup command is working we start off by
  # manually creating a bogus core pattern
  - sudo bash -c 'echo "dummy" > /proc/sys/kernel/core_pattern'

before_install_osx: &osx_setup
  # To ensure that the --setup command is working we start off by
  # manually creating a bogus core pattern
  - sudo sysctl kern.corefile=dummy
  - brew install coreutils || true

install_default: &run_install
  - nvm unload || true
  - rm -rf ~/.nvm/ && git clone --depth 1 https://github.com/creationix/nvm.git ~/.nvm/
  - source ~/.nvm/nvm.sh
  - nvm install 4
  - nvm use 4
  - node --version
  - npm --version
  - which node

script_default: &run_script
 - sudo ./bin/logbt --setup
 - ./bin/logbt --test
 - ./test/unit.sh

services:
  - docker

sudo: required

matrix:
  include:
    - os: linux
      env: DOCKER=1
      dist: trusty
      script:
        - docker build -t logbt-precise -f Dockerfile.ubuntu-precise .
        - sudo ./bin/logbt --setup
        - docker run logbt-precise
        - cat /proc/sys/kernel/core_pattern
    - os: linux
      env: DOCKER=1
      dist: trusty
      script:
        - docker build -t logbt-precise -f Dockerfile.ubuntu-precise .
        - docker run --privileged logbt-precise
        - cat /proc/sys/kernel/core_pattern
    - os: linux
      dist: precise
      env: CXX=clang++
      before_install: *linux_setup
      install: *run_install
      before_script:
        - ./mason/mason install clang++ 3.8.1
        - sudo ln -s $(./mason/mason prefix clang++ 3.8.1)/bin/clang++ /usr/local/bin/clang++
        - which clang++
      script: *run_script
    - os: linux
      dist: trusty
      env: CXX=g++-6
      addons:
        apt:
          sources: [ 'ubuntu-toolchain-r-test']
          packages: [ 'g++-6']
      before_install: *linux_setup
      install: *run_install
      script: *run_script
    - os: linux
      dist: precise
      env: CXX=g++
      before_install: *linux_setup
      install: *run_install
      script: *run_script
    - os: osx
      before_install: *osx_setup
